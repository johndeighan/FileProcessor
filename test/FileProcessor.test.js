// Generated by CoffeeScript 2.7.0
// FileProcessor.test.coffee
var MyFileProcessor, fp;

import {
  defined,
  LOG
} from '@jdeighan/base-utils';

import {
  utest
} from '@jdeighan/base-utils/utest';

import {
  FileProcessor
} from '@jdeighan/FileProcessor';

// ---------------------------------------------------------------------------
MyFileProcessor = class MyFileProcessor extends FileProcessor {
  begin() {
    this.lLines = []; // collect output lines here
  }

  // ..........................................................
  filterFile(hFileInfo) {
    return (hFileInfo.ext === '.zh') && (this.lLines.length < 10);
  }

  // ..........................................................
  filterLine(hFileInfo) {
    return this.lLines.length < 10;
  }

  // ..........................................................
  handleLine(line, lineNum, hFileInfo) {
    var _, lAst, lMatches, num, word;
    lMatches = line.match(/^(\**)\s+(\S+)/); // leading asterisks
    if (defined(lMatches)) {
      [_, lAst, word] = lMatches;
      num = lAst.length;
      this.lLines.push(`${num} ${word}`);
      if (this.lLines.length === 10) {
        return {
          abort: true
        };
      }
    }
  }

};

fp = new MyFileProcessor('./test/');

fp.go();

utest.equal(42, fp.lLines.length, 10);

utest.equal(43, fp.numFiles, 2);

utest.equal(44, fp.totalLines(), 10);
